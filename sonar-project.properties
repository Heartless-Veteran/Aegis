sonar.projectKey=Heartless-Veteran_Aegis
sonar.organization=heartless-veteran
sonar.projectName=Aegis Programming Language
sonar.projectVersion=0.2.0-alpha

# Source directories
sonar.sources=Aegis_Compiler/Src,Aegis_LSP/Src,Aegis_Bridge/Src,Docs
sonar.exclusions=**/target/**,**/*.lock,**/*.toml,**/node_modules/**

# Test directories  
sonar.tests=Aegis_Compiler/tests
sonar.test.exclusions=**/target/**

# Language-specific settings
sonar.rust.file.suffixes=.rs
sonar.rust.clippy.reportPaths=target/clippy-report.json

# Coverage (if available)
sonar.coverage.exclusions=**/tests/**,**/examples/**,**/target/**

# Quality gate
sonar.qualitygate.wait=true

# Analysis parameters
sonar.sourceEncoding=UTF-8
sonar.scm.provider=git

# Project-specific rules
# Focus on maintainability and reliability for a systems programming language
sonar.issue.ignore.multicriteria=e1,e2,e3

# Ignore complexity warnings for compiler code (inherently complex)
sonar.issue.ignore.multicriteria.e1.ruleKey=rust:S1541
sonar.issue.ignore.multicriteria.e1.resourceKey=**/compiler/**

# Ignore function parameter count for code generation
sonar.issue.ignore.multicriteria.e2.ruleKey=rust:S107
sonar.issue.ignore.multicriteria.e2.resourceKey=**/codegen/**

# Ignore cognitive complexity for parsing logic
sonar.issue.ignore.multicriteria.e3.ruleKey=rust:S3776  
sonar.issue.ignore.multicriteria.e3.resourceKey=**/parser/**