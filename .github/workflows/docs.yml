name: Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths: ['Docs/**', 'README.md', 'Aegis_Compiler/src/**/*.rs']

jobs:
  # Build and deploy documentation
  docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build API documentation
        run: |
          # Generate Rust documentation for the compiler
          cargo doc --package aegis-compiler --no-deps --document-private-items
          
          # Generate LSP documentation (if it builds)
          cargo doc --package aegis-lsp --no-deps --document-private-items || echo "LSP docs failed, continuing..."

      - name: Prepare documentation site
        run: |
          # Create docs directory structure
          mkdir -p docs-site
          mkdir -p docs-site/api
          mkdir -p docs-site/guide
          
          # Copy generated API docs
          cp -r target/doc/* docs-site/api/ || echo "No API docs generated"
          
          # Copy markdown documentation
          cp -r Docs/* docs-site/guide/
          cp README.md docs-site/
          cp Roadmap.md docs-site/
          
          # Create a simple index.html
          cat > docs-site/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Aegis Programming Language</title>
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; margin: 40px; }
                  .container { max-width: 800px; margin: 0 auto; }
                  .logo { text-align: center; font-family: monospace; font-size: 2em; margin-bottom: 2em; }
                  .nav { list-style: none; padding: 0; margin: 2em 0; }
                  .nav li { margin: 1em 0; }
                  .nav a { text-decoration: none; color: #0366d6; font-size: 1.2em; }
                  .nav a:hover { text-decoration: underline; }
              </style>
          </head>
          <body>
              <div class="container">
                  <pre class="logo">
            ___    __    ____  ___   ____ 
           / __)  /__\  (  _ \(  _)/ ___)
          ( (__  /(__)\  )___/ )_) \___ \
           \___)(__)(__)(__)  (____/____/
                  </pre>
                  <h1>Aegis Programming Language Documentation</h1>
                  <p>A universal programming language for joyful, safe, and powerful creation.</p>
                  
                  <ul class="nav">
                      <li><a href="README.html">üìñ Project Overview</a></li>
                      <li><a href="guide/guide.html">üöÄ Language Guide</a></li>
                      <li><a href="Roadmap.html">üó∫Ô∏è Project Roadmap</a></li>
                      <li><a href="api/aegis_compiler/index.html">üìö API Documentation</a></li>
                      <li><a href="https://github.com/Heartless-Veteran/Aegis">üíª GitHub Repository</a></li>
                  </ul>
              </div>
          </body>
          </html>
          EOF
          
          # Convert markdown files to HTML (basic conversion)
          for md_file in $(find docs-site -name "*.md"); do
              html_file="${md_file%.md}.html"
              echo "<!DOCTYPE html><html><head><title>Aegis Docs</title><style>body{font-family:system-ui;max-width:800px;margin:40px auto;padding:20px;line-height:1.6;}</style></head><body>" > "$html_file"
              # Simple markdown-like conversion for basic formatting
              sed 's/^# \(.*\)/<h1>\1<\/h1>/' "$md_file" | \
              sed 's/^## \(.*\)/<h2>\1<\/h2>/' | \
              sed 's/^### \(.*\)/<h3>\1<\/h3>/' | \
              sed 's/^\- \(.*\)/<li>\1<\/li>/' | \
              sed 's/`\([^`]*\)`/<code>\1<\/code>/g' | \
              sed 's/\*\*\([^*]*\)\*\*/<strong>\1<\/strong>/g' | \
              sed 's/\*\([^*]*\)\*/<em>\1<\/em>/g' >> "$html_file"
              echo "</body></html>" >> "$html_file"
          done

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs-site/

  # Deploy to GitHub Pages
  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: docs
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Validate documentation links and examples
  validate-docs:
    name: Validate Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Validate code examples in guide
        run: |
          # Extract and validate Aegis code examples from markdown files
          echo "Validating code examples in documentation..."
          
          # This would extract ```aegis code blocks and validate them
          # For now, we'll just check that the guide files are properly formatted
          find Docs -name "*.md" -exec echo "Checking {}" \; -exec head -5 {} \;
          
          echo "Documentation validation completed"

      - name: Check for broken internal links
        run: |
          # Basic link validation
          echo "Checking for broken internal links..."
          find Docs -name "*.md" -exec grep -l "\[.*\](.*\.md)" {} \; | head -5 || echo "No internal markdown links found"